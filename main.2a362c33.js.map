{"version":3,"sources":["scripts/main.js"],"names":["btn","document","querySelector","messageStart","messageLose","messageWin","rowsField","querySelectorAll","gameScore","bestScore","score","gameField","reset","className","render","row","col","children","textContent","innerText","itIsFinish","field","copyField","map","x","findeEmpty","find","y","reduce","a","b","concat","every","i","rotateRight","startGame","randomX","Math","floor","random","randomY","sortRow","key","rowData","filter","rowEmpty","newField","length","shift","rotateLeft","pop","checkField","arrStart","arrEnd","checkArrStart","checkArrEnd","addEventListener","e","classList","replace","hidden","contains","oldField"],"mappings":"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","file":"main.2a362c33.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst btn = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nconst rowsField = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst bestScore = document.querySelector('.best-game__score');\n\nlet score = 0;\n\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction reset() {\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n  messageLose.className += 'message message-lose hidden';\n  messageWin.className = 'message message-win hidden';\n\n  render();\n}\n\nfunction render() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      rowsField[row].children[col].textContent\n        = gameField[row][col] ? gameField[row][col] : '';\n\n      rowsField[row].children[col].className\n        = `field-cell field-cell--${gameField[row][col]}`;\n    }\n  }\n\n  gameScore.innerText = score;\n}\n\nfunction itIsFinish(field) {\n  const copyField = field.map(x => [...x]);\n  const winner = copyField.find(x => x.find(y => y >= 2048));\n\n  if (winner) {\n    messageWin.className = 'message message-win';\n\n    if (score > bestScore.innerText) {\n      bestScore.innerText = score;\n    }\n  }\n\n  const findeEmpty\n    = copyField.reduce((a, b) => a.concat(b)).every(x => x !== 0);\n\n  if (findeEmpty) {\n    for (let i = 0; i < 4; i++) {\n      for (let x = 0; x < 3; ++x) {\n        if (copyField[i][x] === copyField[i][x + 1]) {\n          return false;\n        }\n      }\n    }\n\n    rotateRight(copyField);\n\n    for (let i = 0; i < 4; i++) {\n      for (let x = 0; x < 3; ++x) {\n        if (copyField[i][x] === copyField[i][x + 1]) {\n          return false;\n        }\n      }\n    }\n\n    if (score > bestScore.innerText) {\n      bestScore.innerText = score;\n    }\n    messageLose.className = 'message message-lose';\n  }\n}\n\nfunction startGame() {\n  const randomX = Math.floor(Math.random() * 4);\n  const randomY = Math.floor(Math.random() * 4);\n\n  if (gameField[randomX][randomY] === 0) {\n    gameField[randomX][randomY] = Math.random() > 0.9 ? 4 : 2;\n  } else {\n    startGame();\n  }\n}\n\nfunction sortRow(key) {\n  for (let i = 0; i < 4; i++) {\n    let rowData = gameField[i].filter(x => x !== 0);\n    let rowEmpty = gameField[i].filter(x => x === 0);\n\n    if (key !== 'ArrowLeft') {\n      gameField[i] = rowEmpty.concat(rowData);\n    } else {\n      gameField[i] = rowData.concat(rowEmpty);\n    }\n\n    if (key !== 'ArrowLeft') {\n      if (gameField[i][3] === gameField[i][2]) {\n        gameField[i][3] = gameField[i][2] * 2;\n        score += gameField[i][3];\n        gameField[i][2] = 0;\n      }\n\n      if (gameField[i][2] === gameField[i][1]) {\n        gameField[i][2] = gameField[i][1] * 2;\n        score += gameField[i][2];\n        gameField[i][1] = 0;\n      }\n\n      if (gameField[i][1] === gameField[i][0]) {\n        gameField[i][1] = gameField[i][0] * 2;\n        score += gameField[i][1];\n        gameField[i][0] = 0;\n      }\n    } else {\n      if (gameField[i][0] === gameField[i][1]) {\n        gameField[i][0] = gameField[i][1] * 2;\n        score += gameField[i][0];\n        gameField[i][1] = 0;\n      }\n\n      if (gameField[i][1] === gameField[i][2]) {\n        gameField[i][1] = gameField[i][2] * 2;\n        score += gameField[i][1];\n        gameField[i][2] = 0;\n      }\n\n      if (gameField[i][2] === gameField[i][3]) {\n        gameField[i][2] = gameField[i][3] * 2;\n        score += gameField[i][2];\n        gameField[i][3] = 0;\n      }\n    }\n\n    rowData = gameField[i].filter(x => x !== 0);\n    rowEmpty = gameField[i].filter(x => x === 0);\n\n    if (key !== 'ArrowLeft') {\n      gameField[i] = rowEmpty.concat(rowData);\n    } else {\n      gameField[i] = rowData.concat(rowEmpty);\n    }\n  }\n};\n\nfunction rotateRight(field) {\n  const newField = [ ...field ].map(x => [...x]).reduce((a, b) => a.concat(b));\n\n  for (let i = gameField.length - 1; i >= 0; i--) {\n    for (let x = 0; x < gameField.length; x++) {\n      field[x][i] = newField.shift();\n    }\n  }\n}\n\nfunction rotateLeft(field) {\n  const newField = [ ...field ].reduce((a, b) => a.concat(b));\n\n  for (let i = gameField.length - 1; i >= 0; i--) {\n    for (let x = 0; x < gameField.length; x++) {\n      gameField[x][i] = newField.pop();\n    }\n  }\n};\n\nfunction checkField(arrStart, arrEnd) {\n  const checkArrStart = [ ...arrStart ].reduce((a, b) => a.concat(b));\n  const checkArrEnd = [ ...arrEnd ].reduce((a, b) => a.concat(b));\n\n  for (let i = 0; i < checkArrStart.length; i++) {\n    if (checkArrStart[i] !== checkArrEnd[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nbtn.addEventListener('click', (e) => {\n  if (btn.innerText === 'Start') {\n    btn.classList.replace('start', 'restart');\n    btn.innerText = 'Restart';\n    messageStart.hidden = true;\n  } else {\n    reset();\n  }\n\n  startGame();\n  startGame();\n\n  render();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (btn.innerText === 'Start' || !messageWin.classList.contains('hidden')) {\n    return;\n  }\n\n  const oldField = gameField.map(x => [ ...x ]);\n\n  switch (e.key) {\n    case 'ArrowUp':\n      rotateRight(gameField);\n\n      sortRow(e.key);\n      rotateLeft(gameField);\n\n      if (!checkField(oldField, gameField)) {\n        startGame();\n      }\n\n      render();\n      itIsFinish(gameField);\n      break;\n\n    case 'ArrowDown':\n      rotateLeft(gameField);\n\n      sortRow(e.key);\n      rotateRight(gameField);\n\n      if (!checkField(oldField, gameField)) {\n        startGame();\n      }\n\n      render();\n      itIsFinish(gameField);\n      break;\n\n    case 'ArrowRight':\n      sortRow(e.key);\n\n      if (!checkField(oldField, gameField)) {\n        startGame();\n      }\n\n      render();\n      itIsFinish(gameField);\n      break;\n\n    case 'ArrowLeft':\n      sortRow(e.key);\n\n      if (!checkField(oldField, gameField)) {\n        startGame();\n      }\n\n      render();\n      itIsFinish(gameField);\n      break;\n  }\n});\n"]}